name: Publish Docker image

on:
  push:
    branches:
      - main

jobs:
  publish-docker-image:
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: echo "VERSION=$(make version)" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }}

  push-latest-tag:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: publish-docker-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        run: echo "VERSION=$(make version)" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git fetch --tags --force
          if git rev-parse -q --verify "refs/tags/${{ steps.get_version.outputs.VERSION }}"; then
            echo "Tag ${{ steps.get_version.outputs.VERSION }} already exists; skipping."
          else
            git tag ${{ steps.get_version.outputs.VERSION }}
            git push origin ${{ steps.get_version.outputs.VERSION }}
          fi
